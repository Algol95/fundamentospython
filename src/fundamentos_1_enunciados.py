# üß™ Fundamentos Python I ‚Äì Enunciados

# ------------------------------
# TIPOS DE DATOS
# ------------------------------

# ‚ú® Ejercicio 1: ¬øQu√© tipo es?
# Declara las siguientes variables y usa type()
# para imprimir qu√© tipo de dato es cada una:
a = "Hola"
b = 25
c = 3.14
d = True
e = None
print("------------------------------")
print("‚ú® Ejercicio 1: ¬øQu√© tipo es?:")
print("------------------------------")
print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(type(e))

# ‚ú® Ejercicio 2: Conversi√≥n r√°pida
# Convierte la cadena "42" en n√∫mero, s√∫male 8 y muestra el resultado.
# Luego convierte el n√∫mero 100 en texto y muestra la frase:
# "Tu puntuaci√≥n final es: 100"

print("----------------------------------")
print("‚ú® Ejercicio 2: Conversi√≥n r√°pida:")
print("----------------------------------")
num1 = "42"
num1 = int(num1) + 8
print(f"Str a int: {num1}")

num2 = 100
print("Tu puntuaci√≥n final es: " + str(num2))
# ------------------------------
# VARIABLES
# ------------------------------

# ‚ú® Ejercicio 3: Nombres y saludos
# Crea una variable nombre y una variable edad.
# Imprime una frase como:
# Hola, me llamo X y tengo Y a√±os.
print("----------------------------------")
print("‚ú® Ejercicio 3: Nombres y saludos:")
print("----------------------------------")
name = "Ana"
age = 44
print(f"Hola, me llamo {name} y tengo {age} a√±os")
# ‚ú® Ejercicio 4: Intercambio simple
# Tienes dos variables:
x = "gato"
y = "perro"
# Intercambia sus valores para que x valga "perro" e y valga "gato".
print("-----------------------------------")
print("‚ú® Ejercicio 4: Intercambio simple:")
print("-----------------------------------")
x, y = y, x
print(f"X: {x} | Y: {y}")
# ------------------------------
# OPERADORES
# ------------------------------

# ‚ú® Ejercicio 5: Suma de la compra
# Declara tres precios:
pan = 1.50
leche = 1.24
huevos = 2.70
# Calcula el total y muestra: ‚ÄúEl total de tu compra es de: 4,25‚Ç¨‚Äù
print("----------------------------------")
print("‚ú® Ejercicio 5: Suma de la compra:")
print("----------------------------------")
total = pan + leche + huevos
print(f"Total: {total}")
# ‚ú® Ejercicio 6: ¬øPar o impar?
# Pide al usuario un n√∫mero con input() y di si es par o impar.
print("------------------------------")
print("‚ú® Ejercicio 6: ¬øPar o impar?:")
print("------------------------------")
try:
    num = int(input("Introduce un n√∫mero entero: "))
    if num % 2:
        print(f"‚Ä¢ {num} es un n√∫mero impar")
    else:
        print(f"‚Ä¢ {num} es un n√∫mero par")
except ValueError:
    print("\033[91mNo es un n√∫mero v√°lido\033[0m")

# ------------------------------
# ESTRUCTURAS DE CONTROL
# ------------------------------

# ‚ú® Ejercicio 7: ¬øMayor de edad?
# Pide la edad al usuario. Si tiene 18 o m√°s, muestra ‚ÄúPuedes entrar‚Äù.
# Si no, muestra ‚ÄúAcceso denegado‚Äù.
print("--------------------------------")
print("‚ú® Ejercicio 7: ¬øMayor de edad?:")
print("--------------------------------")
try:
    age = int(input("Introduce tu edad: "))
    if age >= 18:
        print("‚úî Puedes entrar")
    else:
        print("‚ùå No puedes entrar")
except ValueError:
    print("\033[91mNo es una edad v√°lida\033[0m")
# ‚ú® Ejercicio 8: Elige una opci√≥n
# Pide al usuario que elija una opci√≥n:
# 1. Ver perfil
# 2. Editar perfil
# 3. Cerrar sesi√≥n
# Y muestra un mensaje distinto para cada caso.

print("---------------------------------")
print("‚ú® Ejercicio 8: Elige una opci√≥n:")
print("---------------------------------")
print("1. Ver perfil\n2. Editar perfil\n3. Cerrar sesi√≥n")
try:
    menu = int(input("Introduce √≠ndice de men√∫: "))
    response = {
        1: "Ver perf√≠l",
        2: "Editar perfil",
        3: "Cerrar sesi√≥n"
    }.get(menu, "‚ùå Opci√≥n no contemplada")
    if 1 <= menu <= 3:
        print(f"‚Üí Has elegido la opci√≥n: {response}")
    else:
        print(response)
except ValueError:
    print("\033[91mNo es un √≠ndice v√°lido\033[0m")
# ------------------------------
# EXTRA: TIPOS + CONDICIONAL
# ------------------------------

# ‚ú® Ejercicio 9: Detector de tipos raros
# Pide al usuario que escriba cualquier cosa.
# Muestra:
# - Si es un n√∫mero entero: ‚ÄúHas escrito un n√∫mero entero‚Äù
# - Si es un n√∫mero decimal: ‚ÄúHas escrito un n√∫mero decimal‚Äù
# - Si es un texto: ‚ÄúParece que es una cadena de texto‚Äù
# - Si no puedes adivinar el tipo: ‚ÄúNo s√© qu√© es esto üòµ‚Äçüí´‚Äù
# Usa try/except para intentar convertir a int() o float().

print("----------------------------------------")
print("‚ú® Ejercicio 9: Detector de tipos raros:")
print("----------------------------------------")

x = input("Escribe cualquier cosa: ")
try:
    if type(int(x)) == int:
        print("‚ñ∫ Es un entero")
except ValueError:
    try:
        if type(float(x)) == float:
            print("‚ñ∫ Es un decimal")
    except ValueError:
        if type(str(x)) == str:
            print("‚ñ∫ Es una cadena")
        else:
            print("No s√© qu√© es esto üòµ‚Äçüí´")

# ------------------------------
# OPERADORES + CONDICIONALES + VARIABLES
# ------------------------------

# ‚ú® Ejercicio 10: Calculadora con men√∫
# Pide dos n√∫meros y muestra este men√∫:
# 1. Sumar
# 2. Restar
# 3. Multiplicar
# 4. Dividir
# Seg√∫n la opci√≥n elegida, haz la operaci√≥n y muestra el resultado.
# Bonus: si elige dividir y el segundo n√∫mero es 0,
# muestra ‚ÄúNo se puede dividir por cero‚Äù.

print("--------------------------------------")
print("‚ú® Ejercicio 10: Calculadora con men√∫:")
print("--------------------------------------")


def sumar(n1, n2):
    return n1 + n2


def restar(n1, n2):
    return n1 - n2


def mult(n1, n2):
    return n1 * n2


def div(n1, n2):
    return n1 / n2


try:
    x = float(input("Introd√∫ce el primer n√∫mero: "))
    y = float(input("Introd√∫ce el segundo n√∫mero: "))
    print("--------------")
    print("1. Sumar\n2. Restar\n3. Multiplicar\n4. Dividir")
    print("--------------")
    menu = int(input("Ind√≠que √≠ndice de la operaci√≥n deseada: "))

    result = {
        1: sumar(x, y),
        2: restar(x, y),
        3: mult(x, y),
        4: div(x, y)
    }.get(menu, "‚ùå Opci√≥n no contemplada")

    if 1 <= menu <= 4:
        print(f"Resultado: {result}")
    else:
        print(result)
except Exception as e:
    print(f"\033[91mPar√°metro no v√°lido: {e}\033[0m")

# ------------------------------
# ESTRUCTURA DE CONTROL CON RANGOS
# ------------------------------

# ‚ú® Ejercicio 11: Clasificador de edad
# Pide al usuario su edad y clasif√≠calo:
# - Menor de 3: ‚ÄúBeb√©‚Äù
# - Entre 3 y 12: ‚ÄúInfancia‚Äù
# - Entre 13 y 17: ‚ÄúAdolescencia‚Äù
# - Entre 18 y 64: ‚ÄúAdulto‚Äù
# - 100 o m√°s: ‚ÄúSenior‚Äù

print("--------------------------------------")
print("‚ú® Ejercicio 11: Clasificador de edad:")
print("--------------------------------------")

ages = {
    range(0, 3): "Beb√©",
    range(3, 13): "Infancia",
    range(13, 18): "Adolescencia",
    range(18, 65): "Adulto",
    range(65, 120): "Senior"
}

try:
    x = int(input("Introduce una edad: "))
    for rang, response in ages.items():
        if x in rang:
            print(response)
            break
    else:
        print("‚ùå Opci√≥n no contemplada")
except Exception as e:
    print(f"\033[91mDebe ser un n√∫mero entero: {e}\033[0m")
